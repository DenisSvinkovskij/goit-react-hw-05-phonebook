{"version":3,"sources":["components/Toast/Toast.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Toast/Toast.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","onSubmit","this","className","s","form","label","input","type","onChange","button","Component","Filter","onChangeFilter","ContactList","contacts","id","onDeleteContact","TransitionGroup","component","list","map","CSSTransition","appear","timeout","classNames","listItem","onClick","Toast","message","createPortal","container","document","querySelector","App","filter","haveError","addContact","contact","uuidv4","find","item","showToast","prev","errorMessage","setTimeout","deleteContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","visibleContacts","in","unmountOnExit","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.964e8634.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toast_container__LBt7-\",\"message\":\"Toast_message__2P-4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__21lR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__GKxhw\",\"label\":\"ContactForm_label__2W1I-\",\"input\":\"ContactForm_input__mvSUk\",\"button\":\"ContactForm_button__2tNpt\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value = '', onChangeFilter }) {\n  return (\n    <div>\n      <h3>Find contact by name</h3>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nfunction ContactList({\n  contacts = [{ name: 'John', number: '555 - 452 - 521', id: 'dfv5' }],\n  onDeleteContact,\n}) {\n  return (\n    <TransitionGroup component=\"ul\" className={s.list}>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <CSSTransition key={id} appear={true} timeout={250} classNames={s}>\n            <li className={s.listItem}>\n              <span>\n                {name}: {number}\n              </span>\n              <button\n                type=\"button\"\n                className={s.button}\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete contact\n              </button>\n            </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Toast.module.css';\nimport { createPortal } from 'react-dom';\n\nfunction Toast({ message }) {\n  return createPortal(\n    <div className={s.container}>\n      <p className={s.message}>{message}</p>\n    </div>,\n    document.querySelector('#toast'),\n  );\n}\n\nToast.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Toast;\n","import './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport Toast from './components/Toast/Toast';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    haveError: false,\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState(() => {\n        return {\n          contacts: parsedContacts,\n        };\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n\n    if (prevState.haveError) {\n      // console.log('dfvbg');\n      // this.setState(prev => ({\n      //   haveError: !prev.haveError,\n      //   errorMessage: '',\n      // }));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (name === '' || number === '') {\n      // alert(\"Name or number can't be empty string\");\n      this.showToast(\"Name or number can't be empty string\");\n\n      return;\n    }\n\n    if (this.state.contacts.find(item => item.name === name)) {\n      this.showToast(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState(prev => {\n      return { contacts: [...prev.contacts, contact] };\n    });\n  };\n\n  showToast = message => {\n    this.setState(prev => ({\n      haveError: !prev.haveError,\n      errorMessage: message,\n    }));\n    setTimeout(() => {\n      this.setState(prev => ({\n        haveError: !prev.haveError,\n      }));\n    }, 1500);\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => {\n      return {\n        contacts: prev.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const { errorMessage, haveError, contacts } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"Container\">\n          <CSSTransition\n            in={haveError}\n            timeout={250}\n            classNames=\"toast\"\n            unmountOnExit\n          >\n            <Toast message={errorMessage} />\n          </CSSTransition>\n\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames=\"title\"\n            unmountOnExit\n          >\n            <h1>Phonebook</h1>\n          </CSSTransition>\n\n          <ContactForm onAddContact={this.addContact} />\n\n          <h1>Contacts</h1>\n          <CSSTransition\n            in={contacts.length > 0 && visibleContacts.length > 0}\n            // appear={true}\n            timeout={500}\n            classNames=\"filter\"\n            unmountOnExit\n          >\n            <Filter\n              value={this.state.filter}\n              onChangeFilter={this.changeFilter}\n            />\n          </CSSTransition>\n\n          <CSSTransition\n            in={visibleContacts.length > 0}\n            timeout={700}\n            classNames=\"contactList\"\n            unmountOnExit\n          >\n            <ContactList\n              contacts={visibleContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </CSSTransition>\n\n          <CSSTransition\n            in={visibleContacts.length === 0}\n            timeout={700}\n            classNames=\"message-empty\"\n            unmountOnExit\n          >\n            <p>Contact list empty for now</p>\n          </CSSTransition>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2IR3Q\",\"listItem\":\"ContactList_listItem__3UiT4\",\"button\":\"ContactList_button__3P-gM\",\"appear\":\"ContactList_appear__3-QxR\",\"appearActive\":\"ContactList_appearActive__O79zP\",\"enter\":\"ContactList_enter__h1fvU\",\"enterActive\":\"ContactList_enterActive__3IT8J\",\"exit\":\"ContactList_exit__1iWRr\",\"exitActive\":\"ContactList_exitActive__1iQtS\"};"],"sourceRoot":""}